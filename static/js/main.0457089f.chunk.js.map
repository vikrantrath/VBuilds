{"version":3,"sources":["httpClient/gallery.js","httpClient/testimonials.js","pages/LandingPageComponents/Quicklinks.js","pages/LandingPageComponents/Header.js","pages/LandingPageComponents/About.js","pages/LandingPageComponents/Gallery.js","pages/LandingPageComponents/Testimonials.js","pages/LandingPageComponents/Contact.js","pages/LandingPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getGalleryItems","src","alt","hText","pText","getTestimonials","title","text","customerName","Quicklinks","href","Header","className","About","Gallery","galleryItems","Carousel","style","height","map","item","Item","Caption","Testimonials","testimonials","Card","bg","Img","variant","Body","Title","Text","Button","Contact","Container","Row","Col","md","span","offset","color","htmlFor","type","id","rows","outline","LandingPage","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kGAQAA,EAAOC,QAAU,CAACC,gBARM,WAChB,MAAQ,CACJ,CAACC,IAAI,0FAA0FC,IAAI,aAAaC,MAAM,wBAAwBC,MAAM,+DACpJ,CAACH,IAAI,mIAAmIC,IAAI,aAAaC,MAAM,sBAAsBC,MAAM,kFAC3L,CAACH,IAAI,+GAA+GC,IAAI,cAAcC,MAAM,qBAAqBC,MAAM,6E,gBCGnLN,EAAOC,QAAU,CAACM,gBAPM,WAChB,MAAQ,CACJ,CAACC,MAAM,sBAAsBC,KAAK,sJAAsJC,aAAa,WACrM,CAACF,MAAM,sBAAsBC,KAAK,sJAAsJC,aAAa,e,sQCOlMC,G,8BARI,WACf,OAAO,4BACP,4BAAI,uBAAGC,KAAK,eAAR,YACJ,4BAAI,uBAAGA,KAAK,YAAR,UACJ,4BAAI,uBAAGA,KAAK,eAAR,UACJ,4BAAI,uBAAGA,KAAK,aAAR,aCMOC,EATA,WACX,OACI,yBAAKC,UAAU,UACZ,uBAAGF,KAAK,SAAQ,0BAAME,UAAU,QAAhB,OAChB,kBAAC,EAAD,QCIIC,G,MAVD,WACV,OAAO,yBAAKD,UAAU,UACd,yBAAKA,UAAU,SACX,6CACA,kIAGJ,yBAAKA,UAAU,YAAf,S,gBCgBGE,G,MApBC,WACZ,IAAMC,EAAef,4BACrB,OAAO,yBAAKY,UAAU,UAChB,kBAACI,EAAA,EAAD,CAAUC,MAAO,CAACC,OAAO,SACtBH,EAAaI,KAAI,SAAAC,GAChB,OAAQ,kBAACJ,EAAA,EAASK,KAAV,KACN,yBACET,UAAU,gBACVX,IAAKmB,EAAKnB,IACVC,IAAKkB,EAAKlB,MAEZ,kBAACc,EAAA,EAASM,QAAV,KACE,4BAAKF,EAAKjB,OACV,2BAAIiB,EAAKhB,gB,wBCKZmB,G,MAnBM,WACjB,IAAMC,EAAenB,4BACrB,OACA,yBAAKO,UAAU,UACVY,EAAaL,KAAI,SAAAC,GACd,OAAQ,kBAACK,EAAA,EAAD,CAAMC,GAAG,OAAOnB,KAAK,QAASK,UAAU,eACxC,kBAACa,EAAA,EAAKd,OAAN,8BAAgD,6BAChD,kBAACc,EAAA,EAAKE,IAAN,CAAUC,QAAQ,MAAM3B,IAAI,4FACxB,kBAACwB,EAAA,EAAKI,KAAN,KACA,kBAACJ,EAAA,EAAKK,MAAN,KAAaV,EAAKd,OAClB,kBAACmB,EAAA,EAAKM,KAAN,SACEX,EAAKb,KADP,OACiBa,EAAKZ,cACV,6BAAM,6BAClB,kBAACwB,EAAA,EAAD,CAAQJ,QAAQ,WAAhB,gD,wBC+CTK,EA9DC,WACZ,OACI,yBAAKrB,UAAU,UACnB,kBAACsB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IAC1B,0BAAM3B,UAAU,eACd,uBAAGA,UAAU,sBAAsBK,MAAO,CAACuB,MAAM,UAAjD,cACA,2BAAOC,QAAQ,2BAA2B7B,UAAU,aAApD,aAGA,2BACE8B,KAAK,OACLC,GAAG,2BACH/B,UAAU,iBAEZ,6BACA,2BAAO6B,QAAQ,4BAA4B7B,UAAU,aAArD,cAGA,2BACE8B,KAAK,QACLC,GAAG,4BACH/B,UAAU,iBAEZ,6BACA,2BACE6B,QAAQ,8BACR7B,UAAU,aAFZ,WAMA,2BACE8B,KAAK,OACLC,GAAG,8BACH/B,UAAU,iBAEZ,6BACA,2BACE6B,QAAQ,8BACR7B,UAAU,aAFZ,gBAMA,8BACE8B,KAAK,OACLC,GAAG,8BACH/B,UAAU,eACVgC,KAAK,MAEP,yBAAKhC,UAAU,oBACb,kBAACoB,EAAA,EAAD,CAAQQ,MAAM,UAAUK,SAAO,EAACH,KAAK,UAArC,eCjCCI,EAZK,WAChB,OACA,yBAAKlC,UAAU,cAAe+B,GAAG,QAC7B,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,MCFOI,MARf,WACE,OACE,yBAAKnC,UAAU,OACd,kBAAC,EAAD,QCIeoC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.0457089f.chunk.js","sourcesContent":["const getGalleryItems = ()=>{\r\n        return ([\r\n            {src:\"https://www.gamersnexus.net/images/media/2012/hardware/cables/cable-mgmt-finished-4.jpg\",alt:\"Low End PC\",hText:\"Entry Level Gaming PC\",pText:\"For those who want the maximum performance at minimum price\"},\r\n            {src:\"https://cdn.pocket-lint.com/r/s/970x/assets/images/147938-laptops-feature-how-to-build-your-own-gaming-pc-image11-s69cfxxwjm.jpg\",alt:\"Mid End PC\",hText:\"Mid Level Gaming PC\",pText:\"We'll make sure you get a bang for your buck when you have some cash to spare.\"},\r\n            {src:\"https://images.nvidia.com/geforce-com/international/geforce-garage/guides/youtube-twitch-rig/joven-rig-2.png\",alt:\"High End PC\",hText:\"High End Gaming PC\",pText:\"When you have all the money and want to flaunt the rig of your dreams\"}\r\n          ])\r\n}\r\n\r\nmodule.exports = {getGalleryItems}","const getTestimonials = ()=>{\r\n        return ([\r\n            {title:\"A Satified Customer\",text:\"Really Happy with the work . I wanted them to build a mid level gaming pc and the labour charge is really economical. I'm glad I chose this service\",customerName:\"Vincent\"},\r\n            {title:\"A Satified Customer\",text:\"Really Happy with the work . I wanted them to build a mid level gaming pc and the labour charge is really economical. I'm glad I chose this service\",customerName:\"Vincent\"}\r\n          ])\r\n}\r\n\r\nmodule.exports = {getTestimonials}","import React from 'react';\r\nimport './Quicklinks.css'\r\nconst Quicklinks = ()=>{\r\n    return <ul>\r\n    <li><a href=\"default.asp\">Gallery</a></li>\r\n    <li><a href=\"news.asp\">Parts</a></li>\r\n    <li><a href=\"contact.asp\">Track</a></li>\r\n    <li><a href=\"about.asp\">Login</a></li>\r\n        </ul>\r\n}\r\nexport default Quicklinks;","import React from 'react';\r\nimport './Header.css'\r\nimport QuickLinks from './Quicklinks'\r\n\r\nconst Header = ()=>{\r\n    return (\r\n        <div className=\"Header\" >\r\n           <a href=\"#home\"><span className=\"logo\">VB</span></a>\r\n           <QuickLinks/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport './About.css'\r\nconst About = ()=>{\r\n    return <div className=\"item-b\">\r\n            <div className=\"first\">\r\n                <h1>Hey Come Here</h1>\r\n                <p>Note that the development build is not optimized.\r\n                To create a production build, use npm run build.</p>\r\n            </div>\r\n            <div className=\"nonTrans\">Hi</div>\r\n        </div>\r\n}\r\nexport default About;","import React from 'react';\r\nimport { Carousel } from 'react-bootstrap';\r\nimport {getGalleryItems} from '../../httpClient/gallery'\r\nimport './Gallery.css'\r\n\r\nconst Gallery = ()=>{\r\n    const galleryItems = getGalleryItems()\r\n    return <div className=\"item-c\">\r\n          <Carousel style={{height:'100%'}}>\r\n            {galleryItems.map(item=>{\r\n              return (<Carousel.Item >\r\n                <img\r\n                  className=\"d-block w-100\"\r\n                  src={item.src}\r\n                  alt={item.alt}\r\n                />\r\n                <Carousel.Caption>\r\n                  <h3>{item.hText}</h3>\r\n                  <p>{item.pText}</p>\r\n                </Carousel.Caption>\r\n              </Carousel.Item>)\r\n            })}\r\n          </Carousel>\r\n        </div>\r\n}\r\nexport default Gallery;","import React from 'react';\r\nimport {Card , Button} from 'react-bootstrap'\r\nimport {getTestimonials} from '../../httpClient/testimonials'\r\nimport './Testimonials.css'\r\nconst Testimonials = ()=>{\r\n    const testimonials = getTestimonials()\r\n    return(\r\n    <div className=\"item-e\">\r\n        {testimonials.map(item=>{\r\n            return (<Card bg=\"dark\" text=\"white\"  className=\"text-center\">\r\n                    <Card.Header>Featured Testimonials</Card.Header><br />\r\n                    <Card.Img variant=\"top\" src=\"https://www.gamersnexus.net/images/media/2012/hardware/cables/cable-mgmt-finished-4.jpg\" />\r\n                        <Card.Body>\r\n                        <Card.Title>{item.title}</Card.Title>\r\n                        <Card.Text>\r\n                        \"{item.text}\" - {item.customerName}\r\n                        </Card.Text><br /><br />\r\n                        <Button variant=\"primary\">Click Here to Read more Testimonials</Button>\r\n                        </Card.Body>\r\n                    </Card>)\r\n        })}\r\n    </div>)\r\n}\r\nexport default Testimonials;","import React from 'react';\r\nimport { Button, Col, Container, Row} from 'react-bootstrap';\r\nconst Contact = ()=>{\r\n    return (\r\n        <div className=\"item-d\">\r\n    <Container >\r\n      <Row>\r\n        <Col md={{ span: 6, offset: 3 }}>\r\n          <form className=\"text-center\">\r\n            <p className=\"h4 text-center mb-4\" style={{color:\"black\"}}>Contact Me</p>\r\n            <label htmlFor=\"defaultFormContactNameEx\" className=\"grey-text\">\r\n              Your name\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"defaultFormContactNameEx\"\r\n              className=\"form-control\"\r\n            />\r\n            <br />\r\n            <label htmlFor=\"defaultFormContactEmailEx\" className=\"grey-text\">\r\n              Your email\r\n            </label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"defaultFormContactEmailEx\"\r\n              className=\"form-control\"\r\n            />\r\n            <br />\r\n            <label\r\n              htmlFor=\"defaultFormContactSubjectEx\"\r\n              className=\"grey-text\"\r\n            >\r\n              Subject\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"defaultFormContactSubjectEx\"\r\n              className=\"form-control\"\r\n            />\r\n            <br />\r\n            <label\r\n              htmlFor=\"defaultFormContactMessageEx\"\r\n              className=\"grey-text\"\r\n            >\r\n              Your message\r\n            </label>\r\n            <textarea\r\n              type=\"text\"\r\n              id=\"defaultFormContactMessageEx\"\r\n              className=\"form-control\"\r\n              rows=\"3\"\r\n            />\r\n            <div className=\"text-center mt-4\">\r\n              <Button color=\"warning\" outline type=\"submit\">\r\n                Send\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n        </div>\r\n    );\r\n}\r\nexport default Contact;","import React from 'react';\r\nimport './LandingPage.css'\r\nimport Header from './LandingPageComponents/Header'\r\nimport About from './LandingPageComponents/About'\r\nimport Gallery from './LandingPageComponents/Gallery'\r\nimport Testimonials from  './LandingPageComponents/Testimonials'\r\nimport Contact from './LandingPageComponents/Contact'\r\n\r\nconst LandingPage = ()=>{\r\n    return (\r\n    <div className=\"welcomePage\"  id=\"home\">\r\n        <Header />\r\n        <About />\r\n        <Gallery />\r\n        <Testimonials/>\r\n        <Contact />\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default LandingPage;","import React from 'react';\nimport './App.css';\nimport LandingPage from './pages/LandingPage'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <LandingPage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}